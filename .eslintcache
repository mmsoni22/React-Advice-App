[{"D:\\advice\\src\\index.js":"1","D:\\advice\\src\\App.js":"2","D:\\advice\\src\\reportWebVitals.js":"3"},{"size":164,"mtime":1607299269404,"results":"4","hashOfConfig":"5"},{"size":859,"mtime":1607301913802,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1817oe4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\advice\\src\\index.js",[],["16","17"],"D:\\advice\\src\\App.js",["18"],"import Axios from \"axios\";\nimport React from \"react\";\nimport axios from \"axios\"\nimport \"./App.css\"\n\n\nclass App extends React.Component {\n  state = {\n    advice : \"\"\n  }\n  componentDidMount() {\n      this.fetchAdvice();\n  }\n  fetchAdvice = () => {\n    axios.get('https://api.adviceslip.com/advice')\n      .then((response) => {\n          const { advice } = response.data.slip\n          \n          this.setState({\n            advice : advice\n          })\n      })\n      .catch((error) => {\n          console.log(error)\n      })\n  }\n  render() {\n    return (\n    <div className = \"App\">\n        <div className = \"card\">\n        <h1 className = \"header\">{this.state.advice}</h1>\n        <button className = \"button\" onClick = {this.fetchAdvice}>\n          <span>Give me an Advice!</span>\n        </button>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default App;","D:\\advice\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":1,"column":8,"nodeType":"25","messageId":"26","endLine":1,"endColumn":13},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]